import 'package:accumulate_api/src/protocol/encoding.dart';
import 'package:accumulate_api/src/protocol/enums.dart';

// DO NOT EDIT. Generated by generate-sdk.sh.

abstract class Signature extends Marshallable {
  int type();
}

abstract class TransactionPayload extends Marshallable {
  int type();
}

{{- range .Types}}

class {{.Name}}
{{- if .IsTransaction}} extends TransactionPayload
{{- else if .IsSignature}} extends Signature
{{- else}} extends Marshallable
{{- end}} {
  {{- if or .Embeddings .Fields}}
  {{.Name}}({
  {{- range .Embeddings}}{{range .Fields}}{{if .IsMarshalled}}{{if not .IsOptional}}required {{end}}this.{{lcName .Name}}, {{end}}{{end}}{{end}}
  {{- range .Fields}}{{if .IsMarshalled}}{{if not .IsOptional}}required {{end}}this.{{lcName .Name}}, {{end}}{{end}}});
  {{range .Embeddings}}
  {{- range .Fields}}
  {{- if .IsMarshalled}}
  {{template "varType" .}} {{lcName .Name}};
  {{- end}}
  {{- end}}
  {{- end}}
  {{- range .Fields}}
  {{- if .IsMarshalled}}
  {{template "varType" .}} {{lcName .Name}};
  {{- end}}
  {{- end}}
  {{end}}

  {{- if .IsUnion}}
  int type() {
    return {{.UnionType}}.{{.UnionValue}};
  }
  {{end}}
  List<int> marshalBinary() {
    var writer = ProtocolWriter();

    {{- if .IsUnion}}
    writer.writeUint(1, this.type());
    {{- end}}
    {{- range .Embeddings}}
    {{- range .Fields}}
    {{- if .IsMarshalled}}
    {{template "marshalField" .}}
    {{- end}}
    {{- end}}
    {{- end}}
    {{- range .Fields}}
    {{- if .IsMarshalled}}
    {{template "marshalField" .}}
    {{- end}}
    {{- end}}
    return writer.msg;
  }
}
{{- end}}

{{- define "varType"}}
{{- if .Repeatable}}List<{{end}}
{{-      if eq .Type "url"     }}String
{{- else if eq .Type "bytes"   }}String
{{- else if eq .Type "chain"   }}String
{{- else if eq .Type "string"  }}String
{{- else if eq .Type "bool"    }}bool
{{- else if eq .Type "varint"  }}int
{{- else if eq .Type "uvarint" }}int
{{- else if eq .Type "int"     }}int
{{- else if eq .Type "uint"    }}int
{{- else if eq .Type "bigint"  }}BigInt
{{- else if eq .Type "rawJson" }}String
{{- else if eq .Type "duration"}}double
{{- else if .AsEnum            }}int
{{- else                       }}{{.Type}}
{{- end}}
{{- if .Repeatable}}>{{end}}
{{- if .IsOptional}}?{{end}}
{{- end}}

{{- define "marshalField"}}
{{- if .Repeatable}}this.{{lcName .Name}}{{if .IsOptional}}?{{end}}.forEach((var value) => writer.{{template "marshaller" .}}({{.Number}}, value));
{{- else          }}writer.{{template "marshaller" .}}({{.Number}}, this.{{lcName .Name}});
{{- end}}
{{- end}}

{{- define "marshaller"}}
{{-      if eq .Type "url"     }}writeString
{{- else if eq .Type "bytes"   }}writeBytes
{{- else if eq .Type "chain"   }}writeHash
{{- else if eq .Type "hash"    }}writeHash
{{- else if eq .Type "string"  }}writeString
{{- else if eq .Type "bool"    }}writeBool
{{- else if eq .Type "varint"  }}writeInt
{{- else if eq .Type "uvarint" }}writeUint
{{- else if eq .Type "int"     }}writeInt
{{- else if eq .Type "uint"    }}writeUint
{{- else if eq .Type "bigint"  }}writeBigInt
{{- else if eq .Type "rawJson" }}writeBytes
{{- else if .AsReference       }}writeValue
{{- else if .AsValue           }}writeValue
{{- else if .AsEnum            }}writeUint
{{- else                       }}UNKNOWNTYPE
{{- end}}
{{- end}}